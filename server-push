#!/bin/bash -e

BOLD=" â˜… "

if [ -t ]
then
    BOLD="[1;32m â˜… [0m[1m"
fi

NORM="[0m"

RSYNC=rsync -essh -v --timeout=45

echo $BOLD Building assets $NORM
make assets

echo $BOLD Synchronizing assets and source to host $NORM
$RSYNC -r static src templates \
      tootstest.asd Makefile *.lisp \
      .htaccess robots.txt \
      --exclude '*~' --exclude '.#*' \
      --exclude 'src/lib/babylon.js/**' \
      tootsville.adventuring.click:tootsville.adventuring.click/

echo $BOLD Synchronizing error pages with Tootsville.org $NORM
$RSYNC -r tootsville.org/error \
      tootsville.adventuring.click:tootsville.adventuring.click/

echo $BOLD Pushing Tootsville.org web site $NORM
$RSYNC -r tootsville.org tootsvilleorg@tootsville.org:

echo $BOLD Building local executable to test $NORM
make tootstest.cgi

echo $BOLD Pushing bin/ scripts $NORM
$RSYNC bin/* tootsville.adventuring.click:tootsville.adventuring.click/bin/

echo $BOLD Attempting to build on host $NORM
build_tries=5
build_try=1
while [ $build_try -lt $build_tries ]
do
    ssh tootsville.adventuring.click nice make -C tootsville.adventuring.click tootstest.cgi || (
        echo "$BOLD Build attempt failed: try $build_try of $build_tries.$NORM"
        if [ $build_try -lt $build_tries ]
        then
            delay=$(( $build_try * 30 ))
            echo $BOLD will try again in $delay sec $NORM
            sleep $delay
            build_try=$(( 1 + $build_try ))
        else
            echo $BOLD Exhausted build attempts, aborting $NORM
            exit -5
        fi
    )
done

echo $BOLD Tagging pushed release $NORM
git tag -s server-push-$(date +%Y-%m-%d-%H%M) HEAD \
    -m "Pushed to server from $(whoami)@$(hostname) at $(date); $(git status -s -uno)"

echo $BOLD Waiting for FastCGI to refresh $NORM
until curl https://tootsville.adventuring.click/version.txt 2>/dev/null | \
        grep -E "^Build-Date:\s+$( date +%Y-%m-%d | sed -e s/-0/-/g )"
do
	echo "New version not yet running (FastCGI cache?)"
	sleep 30 
done

echo $BOLD Notifying Rollbar of the deployment $NORM
curl https://api.rollbar.com/api/1/deploy/ \
     -F access_token=f6f4ae4d08dd415799a1ef2122fff0b0 \
     -F environment=$(./tootstest.cgi version-info product) \
     -F revision=$(git log -n 1 --pretty=format:"%H") \
     -F version=$(./tootstest.cgi version-info version) \
     -F local_username="$(whoami)%$(hostname)"

# echo $BOLD Providing Source Maps to Rollbar $NORM
# curl https://api.rollbar.com/api/1/sourcemap \
#   -F access_token=aaaabbbbccccddddeeeeffff00001111 \
#   -F version=version_string_here \
#   -F minified_url=http://example.com/static/js/example.min.js \
#   -F source_map=@static/js/example.min.map \
#   -F static/js/site.js=@static/js/site.js \
#   -F static/js/util.js=@static/js/util.js

